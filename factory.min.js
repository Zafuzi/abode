function clone(t){var e;if(null==t||"object"!=typeof t)return t;if(t instanceof Date)return e=new Date,e.setTime(t.getTime()),e;if(t instanceof Array){e=[];for(var o=0,n=t.length;o<n;o++)e[o]=clone(t[o]);return e}if(t instanceof Object){for(var a in e={},t)t.hasOwnProperty(a)&&(e[a]=clone(t[a]));return e}throw new Error("Unable to copy obj! Its type isn't supported.")}let Icons={credit:"images/tile.png",steel:"images/steel.png",oxygen:"images/oxygen.png",methane:"images/methane.png",rocket:"images/rocket.png",station:"images/station.png",power:"images/power.png",solar:"images/power.png",hydrogen:"images/tile.png",water:"images/water.png",carbon:"images/carbon.png",grass:"images/tile.png",iron:"images/iron.png",slag:"images/tile.png",trees:"images/trees.png",silicate:"images/tile.png",factory:"images/factory.png",tank:"images/tile.png",tile:"images/tile.png"},node_colors={power:"#fff3a6",solar:"#fff3a6",oxygen:"#ffa6a6",hydrogen:"#fff",methane:"#a6fffe",water:"#a6caff",steel:"#999",grass:"#a6ffaf",carbon:"#58637a",slag:"#c9bbab",iron:"#ba7254",rocket:"#ff99e6",silicates:"#b6c9a5",trees:"#2E6230",carbon_dioxide:"#ffffff",food:"#ffffff"},add_factory=function(t,e,o,n){var a=ctx.transformedPoint(canvas.width/2-50,canvas.height/2-50);new Factory(t,e,Icons[t],o,n,a.x,a.y)},input_connectors={power:["input","power","Power",10,"kW"],water:["input","water","Water",10,"L"]},output_connectors={power:["output","power","Power",20,"kW"],oxygen:["output","oxygen","Oxygen",5,"L"],hydrogen:["output","hydrogen","Hydrogen",5,"L"],water:["output","water","Water",1e3,"L"]},add_input=function(t){return new Connector(input_connectors[t][0],input_connectors[t][1],input_connectors[t][2],input_connectors[t][3],input_connectors[t][4])},add_output=function(t){return new Connector(output_connectors[t][0],output_connectors[t][1],output_connectors[t][2],output_connectors[t][3],output_connectors[t][4])},connector_radius=10;class Connector{constructor(t="input",e="tile",o="Empty Connector",n=0,a="u"){this.name=o,this.rate=n,this.type=t,this.unit=a,this.id=e,this.x=0,this.y=0,this.r=connector_radius}update(t=Factory,e=Number){let o=this;o.x="input"==o.type?t.x:t.x+t.w,o.y=t.dy+(3*factory_padding+2*o.r*e),0==e&&(o.y+=2*o.r);let n=(o.rate||0)+(o.unit||"u/s")+" | "+o.name;ctx.measureText(n).width+2*o.r>t.w&&(t.w+=(ctx.measureText(n).width+2*o.r+2*factory_padding)/2),t.dy+=3*factory_padding+2*o.r*e,t.h+=3*factory_padding+2*o.r,0==e&&(t.dy+=2*o.r,"output"==o.type&&(t.h+=2*o.r))}draw(){let t=this;ctx.beginPath(),ctx.fillStyle=node_colors[t.id],ctx.arc(t.x,t.y,t.r,0,2*Math.PI),ctx.fill(),ctx.closePath();let e=(t.rate||0)+(t.unit||"u/s");"input"==t.type?(ctx.beginPath(),ctx.fillText(e,t.x+2*t.r,t.y+t.r/2),ctx.closePath()):(ctx.beginPath(),ctx.fillText(e,t.x-ctx.measureText(e).width-2*t.r,t.y+t.r/2),ctx.closePath())}}let factories=[],factory_font_size=24,factory_icon_size=24,factory_padding=5,factory_font=factory_font_size+"px monospace";class Factory{constructor(t="empty",e="Empty and Useless",o=Icons.tile,n=[],a=[],r=0,i=0){this.type=t,this.name=e,this.inputs=n,this.outputs=a,this.x=r,this.y=i;let c=new Image;c.src=o,this.icon=c,this.w=100;let s=ctx.measureText(self.name).actualBoundingBoxAscent;this.h=factory_icon_size+2*factory_padding-s/2,this.header_height=this.h,this.dy=this.y+this.header_height,factories.push(this)}update(){let t=this;t.connections=[];let e=ctx.measureText(t.name).actualBoundingBoxAscent;t.h=factory_icon_size+4*factory_padding-e/2,t.header_height=t.h,t.dy=t.y+t.header_height,t.outputs.forEach((e,o)=>{e.update(t,o)}),t.inputs.forEach((e,o)=>{e.update(t,o)})}draw(){let t=this;ctx.beginPath(),ctx.fillStyle="#222233",ctx.fillRect(t.x,t.y,t.w,t.h),ctx.strokeStyle="#444",ctx.strokeRect(t.x,t.y,t.w,t.h),ctx.closePath(),ctx.fillStyle="#fff",ctx.font=factory_font;let e=ctx.measureText(t.name).actualBoundingBoxAscent;ctx.fillText(t.name,t.x+factory_icon_size+3*factory_padding,t.y+(factory_icon_size+2*factory_padding)-e/2),ctx.measureText(t.name).width+factory_font_size+factory_padding>=t.w&&(t.w=ctx.measureText(t.name).width+factory_font_size+4*factory_padding),ctx.beginPath(),ctx.drawImage(t.icon,0,0,t.icon.width,t.icon.height,t.x+factory_padding,t.y+factory_padding,factory_icon_size,factory_icon_size),ctx.closePath(),t.inputs.forEach(t=>{t.draw()}),t.outputs.forEach(t=>{t.draw()})}}let FactoryTypes={solar:function(){add_factory("solar","Solar Panels",[],[add_output("power")])},water:function(){add_factory("water","Water Pump",[add_input("power")],[add_output("water")])},oxygen:function(){add_factory("oxygen","Electrolysis Chamber",[add_input("power"),add_input("water")],[add_output("oxygen"),add_output("hydrogen")])}};