function clone(e){var t;if(null==e||"object"!=typeof e)return e;if(e instanceof Date)return t=new Date,t.setTime(e.getTime()),t;if(e instanceof Array){t=[];for(var n=0,o=e.length;n<o;n++)t[n]=clone(e[n]);return t}if(e instanceof Object){for(var a in t={},e)e.hasOwnProperty(a)&&(t[a]=clone(e[a]));return t}throw new Error("Unable to copy obj! Its type isn't supported.")}let Icons={credit:"images/tile.png",steel:"images/steel.png",oxygen:"images/oxygen.png",methane:"images/methane.png",rocket:"images/rocket.png",station:"images/station.png",power:"images/power.png",hydrogen:"images/tile.png",water:"images/water.png",carbon:"images/carbon.png",grass:"images/tile.png",iron:"images/iron.png",slag:"images/tile.png",trees:"images/trees.png",silicate:"images/tile.png",factory:"images/factory.png",tank:"images/tile.png"},node_colors={power:"#fff3a6",oxygen:"#ffa6a6",hydrogen:"#fff",methane:"#a6fffe",water:"#a6caff",steel:"#999",grass:"#a6ffaf",carbon:"#58637a",slag:"#c9bbab",iron:"#ba7254",rocket:"#ff99e6",silicates:"#b6c9a5",trees:"#2E6230",carbon_dioxide:"#ffffff",food:"#ffffff"},FactoryTypes={solar:{name:"Solar Panels",icon:Icons.power,inputs:{},outputs:{power:{rate:20,units:"kW",generator:!0}}},battery:{name:"Battery",icon:Icons.power,inputs:{power:{}},outputs:{power:{rate:20,units:"kW",capacity:1e3}}},water_storage:{name:"Water Tank",icon:Icons.tank,inputs:{water:{}},outputs:{water:{rate:800,units:"L",capacity:2e4}}},water:{name:"Big Lake of Fresh Water",icon:Icons.water,inputs:{},outputs:{water:{rate:1e3,units:"L",generator:!0}}},oxygen:{name:"Oxygen Electrolysis Chamber",icon:Icons.oxygen,inputs:{power:{},water:{}},outputs:{hydrogen:{generator:!0},oxygen:{generator:!0}}},carbon:{name:"Charcoal Hut",icon:Icons.carbon,inputs:{trees:{}},outputs:{carbon:{},carbon_dioxide:{generator:!0}}},iron:{name:"Iron Mine",icon:Icons.iron,inputs:{},outputs:{iron:{generator:!0},silicates:{generator:!0}}},steel:{name:"Steel Production Facility",icon:Icons.steel,inputs:{iron:{},carbon:{},oxygen:{}},outputs:{steel:{generator:!0},slag:{generator:!0}}},rocket:{name:"Rocket Fabricator",icon:Icons.rocket,inputs:{steel:{},methane:{},oxygen:{},power:{}},outputs:{rocket:{generator:!0}}},trees:{name:"Synthetic Forest",icon:Icons.trees,inputs:{carbon_dioxide:{},power:{},water:{}},outputs:{oxygen:{generator:!0},food:{generator:!0},trees:{generator:!0}}},methane:{name:"Farting Cows",icon:Icons.methane,inputs:{grass:{},water:{}},outputs:{methane:{generator:!0}}},grass:{name:"Grassfield",icon:Icons.grass,inputs:{water:{}},outputs:{grass:{generator:!0},oxygen:{generator:!0}}}},connector_radius=10;class Connector{constructor(e=Factory,t="input",n="Empty Connector",o=0,a="u",r=!1){this.name=n,this.rate=o,this.type=t,this.unit=a,this.generator=r,this.x=e.x,this.y=e.y,this.r=connector_radius}update(e=Factory,t=Number){}draw(){let e=this;if(ctx.beginPath(),ctx.fillStyle=node_colors[e.name],ctx.arc(e.x,e.y,e.r,0,2*Math.PI),ctx.fill(),ctx.closePath(),"input"==e.type)ctx.beginPath(),ctx.fillText(e.name,e.x,e.y+5),ctx.closePath();else{ctx.beginPath();let t=(e.rate||0)+(e.unit||"u/s")+" | "+e.name;ctx.fillText(t,e.x-ctx.measureText(t).width-2*e.r,e.y+e.r/2),ctx.closePath()}}}class Factory{constructor(e,t,n){let o=clone(e);this.name=o.name,this.inputs=o.inputs,this.outputs=o.outputs;let a=new Image;a.src=o.icon,this.icon=a,this.x=t,this.y=n,this.w=150,this.node_radius=5,this.h=62,this.header_height=18,factories.push(this)}update(){this.connections=[],this.calc_connections()}draw(){let e=this,t=e.x,n=e.y;ctx.beginPath(),ctx.fillStyle="#222233",ctx.fillRect(t,n,e.w,e.h),ctx.strokeStyle="#444",ctx.strokeRect(t,n,e.w,e.h),ctx.closePath(),ctx.fillStyle="#fff",ctx.fillText(e.name,e.x+5+34,e.y+10+12),39+ctx.measureText(e.name).width>=e.w&&(e.w=39+ctx.measureText(e.name).width+10),ctx.beginPath(),ctx.drawImage(e.icon,0,0,e.icon.width,e.icon.height,e.x+5,e.y+10,24,24),ctx.closePath();let o=0;t=e.x,n=e.y+e.header_height+font_size/1.2+2*e.node_radius+10,Object.keys(e.inputs).forEach(a=>{n>o&&(o=n);let r=e.inputs[a];r.name||(r.name=a,r.r=e.node_radius),r.x=t,r.y=n,ctx.beginPath(),ctx.fillStyle=node_colors[r.name],ctx.arc(r.x,r.y,e.node_radius,0,2*Math.PI),ctx.fill(),ctx.closePath(),ctx.beginPath(),ctx.fillText(r.name,r.x+font_size,r.y+5),ctx.closePath(),n+=2*e.node_radius+10}),t=e.x+e.w,n=e.y+e.header_height+font_size/1.2+2*e.node_radius+10,Object.keys(e.outputs).forEach(a=>{n>o&&(o=n);let r=e.outputs[a];r.x=t,r.y=n,r.name=a,r.r=e.node_radius,ctx.beginPath(),ctx.fillStyle=node_colors[r.name],ctx.arc(r.x,r.y,e.node_radius,0,2*Math.PI),ctx.fill(),ctx.closePath(),ctx.beginPath();let s=(r.rate||0)+(r.units||"u/s")+" | "+r.name;ctx.fillText(s,r.x-ctx.measureText(s).width-2*e.node_radius,r.y+e.node_radius/2),ctx.closePath(),n+=2*e.node_radius+10}),62==this.h&&(this.h+=o-e.y-(e.header_height+font_size/1.2+2*e.node_radius)+5)}calc_connections(){let e=this,t=e.x+e.w,n=e.y+e.header_height+font_size/1.2+2*e.node_radius+10;Object.keys(e.outputs).forEach(o=>{let a=e.outputs[o];if(a.name||(a.x=t,a.y=n,a.name=o,a.r=e.node_radius),a.connected){let t=a.connected;if(t.remove_on_mouse_up&&!mousedown)return a.connected=null,void factories.forEach(n=>{Object.keys(n.inputs).forEach(o=>{let r=n.inputs[o];hit_rad({x:r.x,y:r.y,r:e.node_radius})&&o==t.name&&(r.connected&&(r.connected.connected=null),a.connected=r,r.connected=a)})});let n={},o=a.x>t.x?t:a;n.remote_node=t;let r=(a.x+t.x)/2;if(a==o){let e={x:r,y:a.y},o={x:r,y:t.y};n.x=a.x,n.y=a.y,n.cp1=e,n.cp2=o,n.px=t.x,n.py=t.y}else{let e={x:r,y:t.y},o={x:r,y:a.y};n.x=a.x,n.y=a.y,n.cp1=e,n.cp2=o,n.px=t.x,n.py=t.y}n.strokeStyle=node_colors[a.name],e.connections.push(n)}else resources[o]||(resources[o]=0),a.rate&&a.generator&&(resources[o]+=a.rate/master_tick_rate);n+=2*e.node_radius+5})}}